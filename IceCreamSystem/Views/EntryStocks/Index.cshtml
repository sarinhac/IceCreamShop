@model IEnumerable<IceCreamSystem.Models.EntryStock>

@{
    Layout = "~/Views/Shared/_IndexsView.cshtml";
    ViewBag.Title = "EntryStocks";
}

<table id="example1" class="table table-bordered table-striped dataTable dtr-inline collapsed" style="width:100%" role="grid" aria-describedby="example1_info">
    <thead>
        <tr role="row">
            @if (@Session["permission"] != null && (int)@Session["permission"] == 1)
            {
                <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending">
                    @Html.DisplayNameFor(model => model.Company.NameCompany)
                </th>
            }
            <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending">
                @Html.DisplayNameFor(model => model.Product.NameProduct)
            </th>
            <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending">
                @Html.DisplayNameFor(model => model.ExpirationDate)
            </th>
            <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending">
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr role="row">
                @if (@Session["permission"] != null && (int)@Session["permission"] == 1)
                {
                    <td class="sorting_1" tabindex="0">
                        @Html.DisplayFor(modelItem => item.Company.NameCompany)
                    </td>
                }
                <td class="sorting_1" tabindex="0">
                    @Html.DisplayFor(modelItem => item.Product.NameProduct)
                </td>
                <td class="sorting_1" tabindex="0">
                    @Html.DisplayFor(modelItem => item.ExpirationDate)
                </td>
                <td class="sorting_1" tabindex="0">
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    <div class="btn-group pull-center d-lg-inline">
                        <a class="btn btn-block bg-gradient-info d-lg-inline details" data-toggle="modal" data-target="#modal" data-url="@Url.Action("Details", "EntryStocks", new { id = item.IdStock })"> <i class="fas fa-info-circle"></i> Details </a>
 
                        @if (item.Status.ToString().Equals("NotChecked"))
                        {
                            <a class="btn btn-block bg-gradient-warning d-lg-inline" href="@Url.Action("Edit", "EntryStocks", new { id = item.IdStock })"> <i class="fas fa-edit"></i> Edit </a>
                            <a class="btn btn-block bg-gradient-danger d-lg-inline delete" data-toggle="modal" data-target="#modal" data-url="@Url.Action("Delete", "EntryStocks", new { id = item.IdStock })"> <i class="fas fa-trash-alt"> </i> Delete </a>
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
