@model IceCreamSystem.Models.UnitMeasure

@{
    ViewBag.Controller = "UnitMeasures";
    ViewBag.Title = "New Unit Measure";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="card-body">
        <div class="form-horizontal">

            <div class="form-group">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.NameUnitMeasure, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-ruler-combined"></i></span>
                                </div>
                                @Html.EditorFor(model => model.NameUnitMeasure, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NameUnitMeasure, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.DescriptionUnitMeasure, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-info-circle"></i></span>
                                </div>
                                @Html.EditorFor(model => model.DescriptionUnitMeasure, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DescriptionUnitMeasure, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                @if ((int)@Session["permission"] == 1)
                {
                    <div class="form-group">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.CompanyId, "CompanyId", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-building"></i></span>
                                    </div>
                                    @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control select2" })
                                    @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="form-group" style="display:none">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.CompanyId, "CompanyId", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-building"></i></span>
                                    </div>
                                    @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control select2" })
                                    @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <div class="form-group">
                    <div class="col-md-6">
                        @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-secondary btn-lg" })
                        <input type="submit" value="Save" class="btn btn-success btn-lg" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}



@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}
