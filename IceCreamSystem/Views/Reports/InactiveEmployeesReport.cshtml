@model IEnumerable<IceCreamSystem.Models.Employee>

@{
    ViewBag.Controller = "Reports";
    ViewBag.Title = "Inactive Employees";
}

<div class="row">
    <div class="col-md-12">
        <div class="card-body">
            <div class="row">
                <div class="col-sm-12 col-md-6">
                    <div id="table_button" class="float-right w-50" style=" float: right;"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="card-body">
        <div class="row">
            <div class="col-sm-12 col-md-6 ">
                <div class="progress-group align-middle">
                    @ViewBag.Title
                    <span class="float-right ">
                        <b>@ViewBag.Count</b>
                        /@ViewBag.TotalCount
                    </span>
                    <div class="progress">
                        <div class="progress-bar" role="progressbar" style="width: @(ViewBag.Percent)%;" aria-valuenow="@ViewBag.Percent" aria-valuemin="0" aria-valuemax="100">@ViewBag.Percent %</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<table id="example1" class="table table-bordered table-striped dataTable dtr-inline collapsed" style="width:100%" role="grid" aria-describedby="example1_info">
    <thead>
        <tr role="row">
            <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending">
                @Html.DisplayNameFor(model => model.NameEmployee)
            </th>
            <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending">
                @Html.DisplayNameFor(model => model.Address.Cep)
            </th>
            <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending">
                @Html.DisplayNameFor(model => model.Birth)
            </th>
            <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending">
                @Html.DisplayNameFor(model => model.Admission)
            </th>
            <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending">
                @Html.DisplayNameFor(model => model.Office.NameOffice)
            </th>
            <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending">
                @Html.DisplayNameFor(model => model.Permission)
            </th>
            <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending">
                @Html.DisplayNameFor(model => model.Status)
            </th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr role="row">
                <td class="sorting_1" tabindex="0">
                    @Html.DisplayFor(modelItem => item.NameEmployee)
                </td>
                <td class="sorting_1" tabindex="0">
                    @Html.DisplayFor(modelItem => item.Address.Cep)
                </td>
                <td class="sorting_1" tabindex="0">
                    @Html.DisplayFor(modelItem => item.Birth)
                </td>
                <td class="sorting_1" tabindex="0">
                    @Html.DisplayFor(modelItem => item.Admission)
                </td>
                <td class="sorting_1" tabindex="0">
                    @Html.DisplayFor(modelItem => item.Office.NameOffice)
                </td>
                <td class="sorting_1" tabindex="0">
                    @if (item.Permission != null && item.Permission.ToString().Equals("SuperAdmin"))
                    {
                        <div class="badge badge-pill badge-dark"> @Html.DisplayFor(modelItem => item.Permission)</div>
                    }
                    else if (item.Permission != null && item.Permission.ToString().Equals("Admin"))
                    {
                        <div class="badge badge-pill badge-danger"> @Html.DisplayFor(modelItem => item.Permission)</div>
                    }
                    else if (item.Permission != null && item.Permission.ToString().Equals("Supervisor"))
                    {
                        <div class="badge badge-pill badge-warning"> @Html.DisplayFor(modelItem => item.Permission)</div>
                    }
                    else if (item.Permission != null && item.Permission.ToString().Equals("Stockist"))
                    {
                        <div class="badge badge-pill badge-secondary"> @Html.DisplayFor(modelItem => item.Permission)</div>
                    }
                    else if (item.Permission != null && item.Permission.ToString().Equals("Seller"))
                    {
                        <div class="badge badge-pill badge-info"> @Html.DisplayFor(modelItem => item.Permission)</div>
                    }
                    else
                    {
                        <div class="badge badge-pill badge-light"> <i class="fas fa-ban"></i></div>
                    }
                </td>
                <td class="sorting_1" tabindex="0">
                    <div class="badge badge-danger">@Html.DisplayFor(modelItem => item.Status)</div>
                </td>
            </tr>
        }

    </tbody>
</table>
