@model IEnumerable<IceCreamSystem.Models.Employee>

@{
    Layout = "~/Views/Shared/_IndexsView.cshtml";
    ViewBag.Title = "Employees";
}

<table class="table table-bordered table-striped dataTable dtr-inline" style="width:100%" role="grid">
    <thead>
        <tr role="row">
            @if (@Session["permission"] != null && @Session["permission"].ToString().Equals("1"))
            {
                <th>
                    @Html.DisplayNameFor(model => model.Company.NameCompany)
                </th>
            }
            <th>
                @Html.DisplayNameFor(model => model.NameEmployee)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address.Cep)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Birth)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Admission)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Office.NameOffice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Permission)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
        </tr>
    </thead>

    @foreach (var item in Model)
    {
        <tbody>
            <tr role="row">
                @if (@Session["permission"] != null && @Session["permission"].ToString().Equals("1"))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Company.NameCompany)
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.NameEmployee)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address.Cep)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Birth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Admission)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Office.NameOffice)
                </td>

                @if (item.Permission != null && item.Permission.ToString().Equals("SuperAdmin"))
                {
                    <td>
                        <div class="badge badge-pill badge-dark"> @Html.DisplayFor(modelItem => item.Permission)</div>
                    </td>
                }
                else if (item.Permission != null && item.Permission.ToString().Equals("Admin"))
                {
                <td>
                    <div class="badge badge-pill badge-danger"> @Html.DisplayFor(modelItem => item.Permission)</div>
                </td>
                }
                else if (item.Permission != null && item.Permission.ToString().Equals("Supervisor"))
                {
                <td>
                    <div class="badge badge-pill badge-warning"> @Html.DisplayFor(modelItem => item.Permission)</div>
                </td>
                }
                else if (item.Permission != null && item.Permission.ToString().Equals("Stockist"))
                {
                <td>
                    <div class="badge badge-pill badge-secondary"> @Html.DisplayFor(modelItem => item.Permission)</div>
                </td>
                }
                else if (item.Permission != null && item.Permission.ToString().Equals("Seller"))
                {
                <td>
                    <div class="badge badge-pill badge-info"> @Html.DisplayFor(modelItem => item.Permission)</div>
                </td>
                }
                else
                {
                <td>
                    <div class="badge badge-pill badge-light"> <i class="fas fa-ban"></i></div>
                </td>
                }

                <td>
                    @if (item.Status != 0)
                    {
                        <div class="badge badge-danger">@Html.DisplayFor(modelItem => item.Status)</div> //red when desactived
                    }
                    else
                    {
                        <div class="badge badge-success">@Html.DisplayFor(modelItem => item.Status)</div>//greem when actived
                    }
                </td>
                <td>
                    <div class="btn-group pull-center d-lg-inline">
                        <a class="btn btn-block bg-gradient-info d-lg-inline details" data-toggle="modal" data-target="#modal" data-url="@Url.Action("Details", "Employees", new { id = item.IdEmployee })"> <i class="fas fa-info-circle"></i> Details </a>
                        <a class="btn btn-block bg-gradient-warning d-lg-inline" href="@Url.Action("Edit", "Employees", new { id = item.IdEmployee })"> <i class="fas fa-edit"></i> Edit </a>

                        @if (item.Status != 0)
                        {
                            //Green for delete btn
                            <a class="btn btn-block bg-gradient-success d-lg-inline active" data-toggle="modal" data-target="#modal" data-url="@Url.Action("Active", "Employees", new { id = item.IdEmployee })"> <i class="fas fa-history"></i> Active </a>
                        }
                        else
                        {
                            //Red for delete btn
                            <a class="btn btn-block bg-gradient-danger d-lg-inline delete" data-toggle="modal" data-target="#modal" data-url="@Url.Action("Delete", "Employees", new { id = item.IdEmployee })"> <i class="fas fa-trash-alt"></i> Delete </a>
                        }
                    </div>
                </td>
            </tr>
        </tbody>
    }

</table>
