@model IEnumerable<IceCreamSystem.Models.Sale>

@{
    Layout = "~/Views/Shared/_IndexsView.cshtml";
    ViewBag.Title = "Sales";
}

<table id="example1" class="table table-bordered table-striped dataTable dtr-inline collapsed" style="width:100%" role="grid" aria-describedby="example1_info">
    <thead>
        <tr role="row">
            @if (@Session["permission"] != null && @Session["permission"].ToString().Equals("1"))
            {
                <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending">
                    @Html.DisplayNameFor(model => model.Company.NameCompany)
                </th>
            }
            <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending">
                @Html.DisplayNameFor(model => model.Employee.NameEmployee)
            </th>
            <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending">
                @Html.DisplayNameFor(model => model.TotalPrice)
            </th>
            <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending">
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @if (@Session["permission"] != null && @Session["permission"].ToString().Equals("1"))
                {
                    <td class="sorting_1" tabindex="0">
                        @Html.DisplayFor(modelItem => item.Company.NameCompany)
                    </td>
                }
                <td class="sorting_1" tabindex="0">
                    @Html.DisplayFor(modelItem => item.Employee.NameEmployee)
                </td>
                <td class="sorting_1" tabindex="0">
                    @Html.DisplayFor(modelItem => item.TotalPrice)
                </td>
                <td class="sorting_1" tabindex="0">
                    @if (item.Status != 0 && item.Status.ToString().Equals("PENDING"))
                    {
                        <div class="badge badge-pill badge-warning"> @Html.DisplayFor(modelItem => item.Status)</div>
                    }
                    else if (item.Status != 0 && item.Status.ToString().Equals("FINISHED"))
                    {
                        <div class="badge badge-pill badge-success"> @Html.DisplayFor(modelItem => item.Status)</div>
                    }
                    else if (item.Status != 0 && item.Status.ToString().Equals("CANCELED"))
                    {
                        <div class="badge badge-pill badge-danger"> @Html.DisplayFor(modelItem => item.Status)</div>
                    }
                    else if (item.Status != 0 && item.Status.ToString().Equals("EXPIRED"))
                    {
                        <div class="badge badge-pill badge-secondary"> @Html.DisplayFor(modelItem => item.Status)</div>
                    }
                    else
                    {
                        <div class="badge badge-pill badge-light"> <i class="fas fa-ban"></i></div>
                    }

                </td>
                <td>
                    <div class="btn-group pull-center d-lg-inline">
                        <a class="btn btn-block bg-gradient-info d-lg-inline details" data-toggle="modal" data-target="#modal" data-url="@Url.Action("Details", "Sales", new { id = item.IdSale })"> <i class="fas fa-info-circle"></i> Details </a>
                        @if (item.Status != 0 && item.Status.ToString().Equals("PENDING"))
                        {
                            <a class="btn btn-block bg-gradient-warning d-lg-inline" href="@Url.Action("Edit", "Sales", new { id = item.IdSale })"> <i class="fas fa-edit"></i> Continue </a>
                        }

                        @if (item.Status != 0 && item.Status.ToString().Equals("FINISHED"))
                        {
                            <a class="btn btn-block bg-gradient-danger d-lg-inline details" data-toggle="modal" data-target="#modal" data-url="@Url.Action("Cancel", "Sales", new { id = item.IdSale })"> <i class="fas fa-info-circle"></i> Cancel </a>
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
